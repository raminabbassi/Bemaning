@page "/BackEndPages/Register"
@using Microsoft.AspNetCore.Components.Forms
@using Microsoft.AspNetCore.Components
@using System.ComponentModel.DataAnnotations
@using StaffingSolution.Services
@inject AuthService AuthService

<link href="/css/register.css" rel="stylesheet" />

<h3>Registrera dig</h3>

@if (!string.IsNullOrEmpty(successMessage))
{
    <div class="alert alert-success">@successMessage</div>
}

@if (!string.IsNullOrEmpty(errorMessage))
{
    <div class="alert alert-danger">@errorMessage</div>
}

<EditForm Model="registerModel" OnValidSubmit="RegisterUser">
    <DataAnnotationsValidator />
    <ValidationSummary />

    <div>
        <label for="email">E-post</label>
        <InputText id="email" @bind-Value="registerModel.Email" class="form-control" />
        <ValidationMessage For="() => registerModel.Email" />
    </div>

    <div>
        <label for="password">Lösenord</label>
        <InputText id="password" @bind-Value="registerModel.Password" type="password" class="form-control" />
        <ValidationMessage For="() => registerModel.Password" />
    </div>

    <div>
        <label for="confirmPassword">Bekräfta lösenord</label>
        <InputText id="confirmPassword" @bind-Value="registerModel.ConfirmPassword" type="password" class="form-control" />
        <ValidationMessage For="() => registerModel.ConfirmPassword" />
    </div>

    <button type="submit">Registrera</button>
</EditForm>

@code {
    private RegisterModel registerModel = new RegisterModel();
    private string successMessage; 
    private string errorMessage; 

    private async Task RegisterUser()
    {
        successMessage = string.Empty;
        errorMessage = string.Empty;

        if (registerModel.Password != registerModel.ConfirmPassword)
        {
            errorMessage = "Lösenorden matchar inte!";
            return;
        }

        try
        {
            AuthService.Register(registerModel.Email, registerModel.Password);
            successMessage = "Registreringen lyckades!";
        }
        catch (Exception ex)
        {
            errorMessage = $"Ett fel uppstod: {ex.Message}";
        }
    }

    public class RegisterModel
    {
        [Required(ErrorMessage = "E-post är obligatoriskt.")]
        [EmailAddress(ErrorMessage = "Ange en giltig e-postadress.")]
        public string Email { get; set; }

        [Required(ErrorMessage = "Lösenord är obligatoriskt.")]
        [MinLength(6, ErrorMessage = "Lösenordet måste innehålla minst 6 tecken.")]
        public string Password { get; set; }

        [Required(ErrorMessage = "Bekräfta lösenordet.")]
        public string ConfirmPassword { get; set; }
    }
}
