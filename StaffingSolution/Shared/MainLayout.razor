@using StaffingSolution.Interfaces
@using StaffingSolution.Services
@using StaffingSolution.Pages.BackEndPages

@inherits LayoutComponentBase
@inject IAuthService AuthService
<div class="main-layout">
    <header>
        <a href="/" class="logo-link">
            <img src="images/logo.png" alt="Extendly Logo" class="logo">
        </a>
        <nav>
            <ul>
                <li><a href="/">Hem</a></li>

                @if (AuthService.IsAdmin())
                {
                    <li><a href="/admin/dashboard">Statistik</a></li>
                    <li><a href="/admin/messages">Admin Meddelanden</a></li>
                    <li><a href="/admin/schedule">Admin schema</a></li>
                }
                else
                {
                    <li><a href="/career">Karriär</a></li>
                    <li><a href="/about">Om Oss</a></li>
                    <li><a href="/contact">Kontakt</a></li>
                    
                }
                @if (AuthService.IsUser())
                {
                    <li><a href="/jobsearch">Lediga Tjänster</a></li>
                    <li><a href="/jobbbanken">Jobb Banken</a></li>
                    <li><a href="/book-time">Boka Samtal</a></li>
                    <li><a href="/BackEndPages/joboverview">Job Översikt</a></li>

                }
                @if (isLoggedIn)
                {
                    <li><span>Inloggad som: @loggedInUser</span></li>
                    <li><a class="button" href="/BackEndPages/logout">Logga ut</a></li>

                }
                else
                {
                    <li><a class="button" href="/BackEndPages/Login">Logga in</a></li>
                    <li><a class="button" href="/BackEndPages/Register">Registrera</a></li>
                }

            </ul>
        </nav>
    </header>
</div>





<main>
    @Body
</main>
@if (AuthService.IsUser())
{
    <ChatBot />

}

<partial name="_CookieConsentPartial" optional />

<footer class="footer">
    <div class="container">
        <div class="row">
            <div class="footer-col">
                <h4>Kontakta Oss</h4>
                <ul>
                    <li>Email: <a href="mailto:info@extendly.se">info@extendly.se</a></li>
                    <li>Telefon: <a href="tel:+46123456789">010-123 45 67</a></li>
                </ul>
            </div>
            <div class="footer-col">
                <h4>Länkar</h4>
                <ul>
                    <li><a href="/jobsearch">Jobbannonser</a></li>
                    <li><a href="/career">Karriär</a></li>
                    <li><a href="/about">Om Oss</a></li>
                    <li><a href="/contact">Kontakt</a></li>
                    <li><a href="/book-time">Boka samtal</a></li>
                </ul>
            </div>
            <div class="footer-col">
                <h4>Sociala Medier</h4>
                <p>Följ oss på våra sociala medier!</p>
                <div class="social-links">
                    <a href="#"><i class="fab fa-facebook-f"></i></a>
                    <a href="#"><i class="fab fa-twitter"></i></a>
                    <a href="#"><i class="fab fa-instagram"></i></a>
                    <a href="#"><i class="fab fa-linkedin-in"></i></a>
                </div>
            </div>
        </div>
        <p class="footer-bottom-text">&copy; 2024 Extendly</p>
    </div>
</footer>


@code {
    private bool isLoggedIn;
    private string loggedInUser;
    private bool _initialized = false;

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender && !_initialized)
        {
            _initialized = true;

            await AuthService.InitializeAsync(); 
            UpdateLoginState();
            AuthService.OnChange += HandleAuthStateChange;

            StateHasChanged(); 
        }
    }

    private void HandleAuthStateChange()
    {
        UpdateLoginState();
        StateHasChanged();
    }

    private void UpdateLoginState()
    {
        isLoggedIn = AuthService.IsLoggedIn();
        loggedInUser = isLoggedIn ? AuthService.GetLoggedInUser() : string.Empty;
    }

    public void Dispose()
    {
        AuthService.OnChange -= HandleAuthStateChange;
    }

}